!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
MAX_COUNT	comm/server_test_timer.c	36;"	d	file:
PCTimerHead	comm/server_test_timer.c	/^}PCTimerHead, *PPCTimerHead;$/;"	t	typeref:struct:_PCTimerHead	file:
PCTimerNode	comm/server_test_timer.c	/^}PCTimerNode, *PPCTimerNode;$/;"	t	typeref:struct:_PCTimerNode	file:
PPCTimerHead	comm/server_test_timer.c	/^}PCTimerHead, *PPCTimerHead;$/;"	t	typeref:struct:_PCTimerHead	file:
PPCTimerNode	comm/server_test_timer.c	/^}PCTimerNode, *PPCTimerNode;$/;"	t	typeref:struct:_PCTimerNode	file:
PSTListenOp	comm/server_test_listen.h	/^}STListenOp, *PSTListenOp;$/;"	t	typeref:struct:_STListenerOp
PSTListener	comm/server_test_listen.h	/^}STListener, *PSTListener;$/;"	t	typeref:struct:_STListener
PServerTest	comm/server_test_manage.h	/^}ServerTest, *PServerTest;$/;"	t	typeref:struct:_ServerTest
PUSH_CLIENT_TIMER_ARRAY	comm/server_test_timer.c	37;"	d	file:
PUSH_CLIENT_TIMER_H	comm/server_test_timer.h	2;"	d
PUSH_CLIENT_TIMER_IDLE	comm/server_test_timer.c	/^	PUSH_CLIENT_TIMER_IDLE,$/;"	e	enum:__anon3	file:
PUSH_CLIENT_TIMER_MAX	comm/server_test_timer.c	/^	PUSH_CLIENT_TIMER_MAX$/;"	e	enum:__anon3	file:
PUSH_CLIENT_TIMER_READY	comm/server_test_timer.c	/^	PUSH_CLIENT_TIMER_READY,$/;"	e	enum:__anon3	file:
PUSH_CLIENT_TIMER_RUNNING	comm/server_test_timer.c	/^	PUSH_CLIENT_TIMER_RUNNING,$/;"	e	enum:__anon3	file:
PUSH_CLIENT_TIMER_STATUS_CONSTANT	comm/server_test_timer.h	/^	PUSH_CLIENT_TIMER_STATUS_CONSTANT,			\/\/永久存在$/;"	e	enum:__anon2
PUSH_CLIENT_TIMER_STATUS_INSTANT	comm/server_test_timer.h	/^	PUSH_CLIENT_TIMER_STATUS_INSTANT,				\/\/执行一次就消除$/;"	e	enum:__anon2
PUSH_CLIENT_TIMER_STATUS_MAX	comm/server_test_timer.h	/^	PUSH_CLIENT_TIMER_STATUS_MAX$/;"	e	enum:__anon2
SERVER_TEST_BZERO	comm/server_test_comm.h	40;"	d
SERVER_TEST_CALLOC	comm/server_test_comm.h	30;"	d
SERVER_TEST_CMP_DATA	comm/server_test_comm.h	54;"	d
SERVER_TEST_COMM_H	comm/server_test_comm.h	2;"	d
SERVER_TEST_ERR	comm/server_test_comm.h	/^	SERVER_TEST_ERR,$/;"	e	enum:__anon1
SERVER_TEST_FREE	comm/server_test_comm.h	45;"	d
SERVER_TEST_LISTEN_H	comm/server_test_listen.h	2;"	d
SERVER_TEST_MANAGE_H	comm/server_test_manage.h	2;"	d
SERVER_TEST_MAX	comm/server_test_comm.h	/^	SERVER_TEST_MAX$/;"	e	enum:__anon1
SERVER_TEST_MAX_EVENT	comm/server_test_listen.h	34;"	d
SERVER_TEST_OK	comm/server_test_comm.h	/^	SERVER_TEST_OK$/;"	e	enum:__anon1
SERVER_TEST_PARAM_ERR	comm/server_test_comm.h	/^	SERVER_TEST_PARAM_ERR,$/;"	e	enum:__anon1
STDispatchFunc	comm/server_test_listen.h	/^typedef void (*STDispatchFunc)(int iNumfds, struct epoll_event *pStruEV);$/;"	t
STEpollErrFunc	comm/server_test_listen.h	/^typedef void (*STEpollErrFunc)(void *pEpollData);$/;"	t
STEpollHupFunc	comm/server_test_listen.h	/^typedef void (*STEpollHupFunc)(void *pEpollData);$/;"	t
STEpollOutFunc	comm/server_test_listen.h	/^typedef void (*STEpollOutFunc)(void *pEpollData);$/;"	t
STEpollPriFunc	comm/server_test_listen.h	/^typedef void (*STEpollPriFunc)(void *pEpollData);$/;"	t
STEpollRDHupFunc	comm/server_test_listen.h	/^typedef void (*STEpollRDHupFunc)(void *pEpollData);$/;"	t
STEpollinFunc	comm/server_test_listen.h	/^typedef void (*STEpollinFunc)(void *pEpollData);$/;"	t
STHandle	comm/server_test_manage.h	/^typedef void * STHandle;$/;"	t
STListenHandle	comm/server_test_listen.h	/^typedef void * STListenHandle;$/;"	t
STListenOp	comm/server_test_listen.h	/^}STListenOp, *PSTListenOp;$/;"	t	typeref:struct:_STListenerOp
STListener	comm/server_test_listen.h	/^}STListener, *PSTListener;$/;"	t	typeref:struct:_STListener
ST_DEBUG	comm/server_test_comm.h	26;"	d
ST_ERROR	comm/server_test_comm.h	25;"	d
ServerTest	comm/server_test_manage.h	/^}ServerTest, *PServerTest;$/;"	t	typeref:struct:_ServerTest
_PCTimerHead	comm/server_test_timer.c	/^typedef struct _PCTimerHead$/;"	s	file:
_PCTimerNode	comm/server_test_timer.c	/^typedef struct _PCTimerNode$/;"	s	file:
_STListener	comm/server_test_listen.h	/^typedef struct _STListener$/;"	s
_STListenerOp	comm/server_test_listen.h	/^typedef struct _STListenerOp$/;"	s
_ServerTest	comm/server_test_manage.h	/^typedef struct _ServerTest{ $/;"	s
free	comm/server_test_timer.c	/^	void (*free)(unsigned long);$/;"	m	struct:_PCTimerHead	file:
func	comm/server_test_timer.c	/^	int (*func)(unsigned long);$/;"	m	struct:_PCTimerHead	file:
gStruCntMutex	comm/server_test_timer.c	/^static pthread_mutex_t gStruCntMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
gStruTickMutex	comm/server_test_timer.c	/^static pthread_mutex_t gStruTickMutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
gStruTimerArray	comm/server_test_timer.c	/^static PCTimerHead gStruTimerArray[PUSH_CLIENT_TIMER_ARRAY];$/;"	v	file:
giResetTick	comm/server_test_timer.c	/^static int giResetTick = 0;$/;"	v	file:
giThreadID	comm/server_test_timer.c	/^static int giThreadID = 0;$/;"	v	file:
giTimeTick	comm/server_test_timer.c	/^static int giTimeTick = 0;$/;"	v	file:
giTimerCnt	comm/server_test_timer.c	/^static int giTimerCnt = 0;$/;"	v	file:
iEpollFd	comm/server_test_listen.h	/^	int iEpollFd;$/;"	m	struct:_STListener
iListenNum	comm/server_test_listen.h	/^	int iListenNum;$/;"	m	struct:_STListener
iMSecond	comm/server_test_timer.c	/^	int iMSecond;$/;"	m	struct:_PCTimerHead	file:
iNum	comm/server_test_timer.c	/^	int iNum;						\/\/用于记录有多少用户子使用该定时器$/;"	m	struct:_PCTimerHead	file:
iTick	comm/server_test_timer.c	/^	int iTick;$/;"	m	struct:_PCTimerHead	file:
iTimerFlag	comm/server_test_timer.c	/^	int iTimerFlag;   \/\/定时器状态,是持续存在还是,只是一致存在$/;"	m	struct:_PCTimerHead	file:
iTimerStatus	comm/server_test_timer.c	/^	int iTimerStatus; \/\/是否正在进行处理$/;"	m	struct:_PCTimerHead	file:
iWaitTime	comm/server_test_listen.h	/^	int iWaitTime;$/;"	m	struct:_STListener
pEPollHupFunc	comm/server_test_listen.h	/^	STEpollHupFunc   pEPollHupFunc;				\/\/挂起操作$/;"	m	struct:_STListenerOp
pEpollErrFunc	comm/server_test_listen.h	/^	STEpollErrFunc   pEpollErrFunc;				\/\/错误操作$/;"	m	struct:_STListenerOp
pEpollInFunc	comm/server_test_listen.h	/^	STEpollinFunc	   pEpollInFunc;				\/\/读操作$/;"	m	struct:_STListenerOp
pEpollOutFunc	comm/server_test_listen.h	/^	STEpollOutFunc   pEpollOutFunc;				\/\/写操作$/;"	m	struct:_STListenerOp
pEpollPriFunc	comm/server_test_listen.h	/^	STEpollPriFunc   pEpollPriFunc;				\/\/外带数据操作$/;"	m	struct:_STListenerOp
pEpollRDHupFunc	comm/server_test_listen.h	/^	STEpollRDHupFunc pEpollRDHupFunc;			\/\/对端关闭套接字操作$/;"	m	struct:_STListenerOp
pStruListenOper	comm/server_test_listen.h	/^	STListenOp *pStruListenOper;$/;"	m	struct:_STListener
push_client_check_timer	comm/server_test_timer.c	/^push_client_check_timer($/;"	f
push_client_check_timer_duration	comm/server_test_timer.c	/^push_client_check_timer_duration()$/;"	f
push_client_create_timer	comm/server_test_timer.c	/^push_client_create_timer($/;"	f
push_client_destroy_timer	comm/server_test_timer.c	/^push_client_destroy_timer($/;"	f
push_client_get_tick	comm/server_test_timer.c	/^push_client_get_tick($/;"	f
push_client_get_timer_node	comm/server_test_timer.c	/^push_client_get_timer_node()$/;"	f	file:
push_client_handle_timer	comm/server_test_timer.c	/^push_client_handle_timer($/;"	f	file:
push_client_init_timer	comm/server_test_timer.c	/^push_client_init_timer(int iThreadNum)$/;"	f
push_client_reset_timer	comm/server_test_timer.c	/^push_client_reset_timer()$/;"	f
push_client_timer_count	comm/server_test_timer.c	/^push_client_timer_count($/;"	f	file:
push_client_uninit_timer	comm/server_test_timer.c	/^push_client_uninit_timer()$/;"	f
server_test_add_listen_sockfd	comm/server_test_listen.c	/^server_test_add_listen_sockfd($/;"	f
server_test_create_listener	comm/server_test_listen.c	/^server_test_create_listener($/;"	f
server_test_create_manager	comm/server_test_manage.c	/^server_test_create_manager($/;"	f
server_test_del_listen_sockfd	comm/server_test_listen.c	/^server_test_del_listen_sockfd($/;"	f
server_test_destroy_listener	comm/server_test_listen.c	/^server_test_destroy_listener($/;"	f
server_test_dispatch_task	comm/server_test_listen.c	/^server_test_dispatch_task($/;"	f	file:
server_test_get_waittime	comm/server_test_listen.c	/^server_test_get_waittime($/;"	f	file:
server_test_mod_listen_sockfd	comm/server_test_listen.c	/^server_test_mod_listen_sockfd($/;"	f
server_test_process_time	comm/server_test_listen.c	/^server_test_process_time($/;"	f	file:
server_test_start_listener	comm/server_test_listen.c	/^server_test_start_listener($/;"	f
struListenHandle	comm/server_test_manage.h	/^	STListenHandle struListenHandle;$/;"	m	struct:_ServerTest
struMutex	comm/server_test_timer.c	/^	pthread_mutex_t struMutex;$/;"	m	struct:_PCTimerHead	file:
struNode	comm/server_test_timer.c	/^	struct list_head struNode;$/;"	m	struct:_PCTimerNode	typeref:struct:_PCTimerNode::list_head	file:
ulData	comm/server_test_timer.c	/^	unsigned long ulData; \/\/私有数据$/;"	m	struct:_PCTimerHead	file:
